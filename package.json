{
  "name": "ibm-cloud-cognitive",
  "private": true,
  "version": "0.0.0",
  "repository": "git@github.com:carbon-design-system/ibm-cloud-cognitive.git",
  "license": "Apache-2.0",
  "workspaces": {
    "packages": [
      "packages/*"
    ],
    "nohoist": []
  },
  "scripts": {
    "audit": "node scripts/audit.js dependencies moderate",
    "build": "lerna run build --stream --prefix --loglevel success --npm-client yarn --include-dependencies",
    "build:storybook-addon-carbon-theme": "yarn build --scope \"@carbon/storybook-addon-theme\"",
    "//build:storybook": "# we build dependencies, then run storybook build directly because its dynamic output gets mangled by lerna",
    "build:storybook": "yarn build:storybook-dependencies-only && yarn build:storybook-only",
    "build:storybook-dependencies-only": "yarn build $(lerna ls --scope @carbon/ibm-cloud-cognitive-core --include-dependencies | grep -v '^@carbon/ibm-cloud-cognitive-core$' | xargs -n1 echo '--scope')",
    "build:storybook-only": "cd packages/core && yarn build",
    "ci-check": "yarn format:diff && yarn lint && yarn test --ci && lerna run ci-check --stream",
    "clean": "yarn cache clean && lerna run clean && lerna clean --yes",
    "copy-common-files": "sh ./scripts/copy-common-files.sh;",
    "format": "prettier --write '**/*.{js,md,mdx,scss,ts}' '!**/{build,es,lib,storybook,ts,umd}/**'",
    "format:diff": "prettier --list-different '**/*.{js,md,mdx,scss,ts}' '!**/{build,es,lib,storybook,ts,umd}/**' '!README.md'",
    "generate": "lerna run generate --loglevel success --scope \"@carbon/ibm-cloud-cognitive\" --",
    "monorepo:npm-upgrade": "sh ./scripts/monorepo-npm-upgrade.sh",
    "lint": "yarn lint:es && yarn lint:style",
    "lint:es": "eslint 'packages/*/src/**/*.js'",
    "lint:style": "stylelint 'packages/*/src/**/*.scss' --report-needless-disables --report-invalid-scope-disables",
    "test": "lerna run test --stream && jest",
    "//storybook": "# we build dependencies, then start storybook directly because its dynamic output gets mangled by lerna",
    "storybook": "yarn build:storybook-dependencies-only && cd packages/core && yarn start",
    "sync": "carbon-cli sync"
  },
  "devDependencies": {
    "@commitlint/cli": "^12.1.1",
    "@commitlint/config-conventional": "^12.1.1",
    "@testing-library/react": "^11.2.6",
    "@testing-library/user-event": "^13.1.3",
    "eslint": "^7.24.0",
    "eslint-config-carbon": "^2.1.0",
    "husky": "^4.3.6",
    "jest": "^25.5.4",
    "lerna": "^4.0.0",
    "lint-staged": "^10.5.4",
    "npm-upgrade": "^3.0.0",
    "prettier": "^2.2.1",
    "prettier-config-carbon": "^0.4.0",
    "stylelint": "^13.12.0",
    "stylelint-config-carbon": "^1.2.0",
    "stylelint-plugin-carbon-tokens": "^0.9.0"
  },
  "possibly-not-needed-devDependencies": {
    "@carbon/bundler": "^10.11.0",
    "@testing-library/user-event": "^12.6.0",
    "chalk": "^4.1.0",
    "copyfiles": "^2.4.1",
    "cpx": "^1.5.0",
    "enzyme": "^3.11.0",
    "enzyme-adapter-react-16": "^1.15.5",
    "eslint-plugin-react": "7.21.5",
    "glob": "^7.1.6",
    "react": "^16.13.1",
    "rimraf": "^3.0.2"
  },
  "eslintConfig": {
    "parser": "babel-eslint",
    "extends": [
      "carbon"
    ],
    "rules": {
      "react/display-name": [
        0
      ]
    }
  },
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -e $HUSKY_GIT_PARAMS",
      "pre-commit": "yarn copy-common-files;  lint-staged"
    }
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ],
    "rules": {
      "header-max-length": [
        2,
        "always",
        72
      ],
      "body-max-line-length": [
        2,
        "always",
        80
      ],
      "scope-case": [
        0,
        "always",
        "lower-case"
      ],
      "type-enum": [
        2,
        "always",
        [
          "build",
          "ci",
          "chore",
          "docs",
          "feat",
          "fix",
          "perf",
          "refactor",
          "revert",
          "test"
        ]
      ]
    }
  },
  "lint-staged": {
    "**/*.{js,md,mdx,scss}": "yarn format",
    "**/*.scss": "yarn lint:style"
  }
}
